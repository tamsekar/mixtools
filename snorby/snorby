#!/bin/bash
#
# Snorby Service
# Anirudh Tamsekar


# User-specified exit parameters used in this script:
#
# Exit Code 5 - Incorrect User ID
# Exit Code 6 - Directory not found


# Modify if/where required
APP="snorby"
AS_USER="root"
APP_DIR="/var/www/html/${APP}"
APP_CONFIG="${APP_DIR}/config/database.yml"
LOG_FILE="/var/log/custom_snorby_log.log"
LOCK_FILE="/var/lock/subsys/snorby"
PID_FILE="$APP_DIR/tmp/pids/server.pid"
GEMFILE="$APP_DIR/Gemfile"
RAILS="rails server"
APP_ENV="production"
BUNDLE="bundle"
PROD_IP=`hostname -I`    # It should pick correct host IP, for production this value can be hardcoded.

PROG="snorby"
#EXEC=/usr/bin/ruby
#EXEC=/usr/local/rvm/rubies/ruby-1.9.3-p545/bin/ruby
EXEC=/root/.rbenv/shims/ruby
PARAMS="/var/www/html/snorby/script/delayed_job start RAILS_ENV=production"




START_CMD="$BUNDLE exec $RAILS -b $PROD_IP -e $APP_ENV -P $PID_FILE -d &>/dev/null"
CMD="cd ${APP_DIR}; ${START_CMD}; $PARAMS >> ${LOG_FILE} 2>&1 &"

RETVAL=0


start() {

  status
  if [ $? -eq 1 ]; then

    [ `id -u` == '0' ] || (echo "$RAILS runs as root only .."; exit 5)
    [ -d $APP_DIR ] || (echo "$APP_DIR not found!.. Exiting"; exit 6)
    cd $APP_DIR
    echo "Starting $RAILS .. "

    su -c "$CMD" - $AS_USER
    RETVAL=$?

    #Sleeping for 8 seconds for process to be precisely visible in process table - See status ()

    sleep 8
    [ $RETVAL -eq 0 ] && touch $LOCK_FILE

    echo "$RAILS started."
    return $RETVAL

  else
    echo "$RAILS is already running .. "
  fi

}

stop() {

    echo "Stopping $RAILS .."
    SIG="INT"
    kill -$SIG `cat  $PID_FILE`
    RETVAL=$?
    [ $RETVAL -eq 0 ] && rm -f $LOCK_FILE
    return $RETVAL
}

status() {

  ps -ef | grep 'rails' | grep -v grep
  return $?
}


case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    status)
        status

        if [ $? -eq 0 ]; then
             echo "$RAILS is running .."
             RETVAL=0
         else
             echo "$RAILS is stopped .."
             RETVAL=1
         fi
        ;;
    *)
        echo "Usage: $0 {start|stop|status}"
        exit 0
        ;;
esac
exit $RETVAL
