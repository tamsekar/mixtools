#!/bin/bash
# Snorby Worker Service
# Anirudh Tamsekar


# User-specified exit parameters used in this script:
#
# Exit Code 5 - Incorrect User ID
# Exit Code 6 - Directory not found


# Modify if/when required.
APP="snorby"
AS_USER="root"
APP_DIR="/var/www/html/${APP}"
APP_CONFIG="${APP_DIR}/config/snorby_config.yml"
LOG_FILE="/var/log/custom_snorbyw_log.log"
LOCK_FILE="/var/lock/subsys/snorbyw"
PID_FILE="$APP_DIR/tmp/pids/worker.pid"
GEMFILE="$APP_DIR/Gemfile"
RAILS="rails runner"
APP_ENV="production"
BUNDLE="bundle"
W_START="'Snorby::Worker.start'"
W_STOP="'Snorby::Worker.stop'"
W_RESTART="'Snorby::Worker.restart'"

PROG="snorby"
#EXEC=/usr/bin/ruby
#EXEC=/usr/local/rvm/rubies/ruby-1.9.3-p545/bin/ruby
EXEC=/root/.rbenv/shims/ruby


START_CMD="$BUNDLE exec $RAILS $W_START  &>/dev/null"
STOP_CMD="$BUNDLE exec $RAILS $W_STOP  &>/dev/null"
RESTART_CMD="$BUNDLE exec $RAILS $W_STOP  &>/dev/null"
CMD_ST="cd ${APP_DIR}; ${START_CMD} >> ${LOG_FILE} 2>&1 &"
CMD_SP="cd ${APP_DIR}; ${STOP_CMD} >> ${LOG_FILE} 2>&1 &"
CMD_RE="cd ${APP_DIR}; ${RESTART_CMD} >> ${LOG_FILE} 2>&1 &"
RETVAL=0


start() {
  status
  if [ $? -eq 1 ]; then

    [ `id -u` == '0' ] || (echo "$RAILS runs as root only .."; exit 5)
    [ -d $APP_DIR ] || (echo "$APP_DIR not found!.. Exiting"; exit 6)
    cd $APP_DIR
    echo "Starting $RAILS worker .. "

    su -c "$CMD_ST" - $AS_USER
    RETVAL=$?

    #Sleeping for 8 seconds for process to be precisely visible in process table - See status ()
    sleep 8
    [ $RETVAL -eq 0 ] && touch $LOCK_FILE
    echo "$RAILS worker started."
    return $RETVAL
  else
    echo "$RAILS worker is already running .. "
  fi
}

stop() {

    echo "Stopping $RAILS worker .."

    su -c "$CMD_SP" - $AS_USER
    RETVAL=$?
    [ $RETVAL -eq 0 ] && rm -f $LOCK_FILE
    return $RETVAL
}

restart() {
    echo "Restarting $RAILS worker .."

    su -c "$CMD_RE" - $AS_USER
    RETVAL=$?
    [ $RETVAL -eq 0 ] && rm -f $LOCK_FILE && touch $LOCK_FILE
    return $RETVAL
}

status() {

  ps -ef | grep 'delayed_job' | grep -v grep
  return $?
}
case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    restart)
	restart
	;;
    status)
	status
	if [ $? -eq 0 ]; then
             echo "$RAILS worker is running .."
             RETVAL=0
         else
             echo "$RAILS worker is stopped .."
             RETVAL=1
         fi
        ;;
    *)
        echo "Usage: $0 {start|stop|restart|status}"
        exit 0
        ;;
esac
exit $RETVAL
